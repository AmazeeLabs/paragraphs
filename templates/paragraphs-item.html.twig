{#
/**
 * @file
 * Default theme implementation to display a paragraphs_item.
 *
 * Available variables:
 * - paragraphs_item: Full paragraphs_item entity.
 *   - id: The paragraphs item ID.
 *   - bundle: The type of the paragraphs item, for example, "image" or "text".
 *   - authorid: The user ID of the paragraphs item author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraphs_item']->getCreatedTime().
 * - content: All paragraphs item items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs-item: The current template type (also known as a "theming hook").
 *   - paragraphs-item--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs-item--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs-item--view-mode--[view_mode]: The View Mode of the paragraphs item; for example, a
 *     preview would result in: "paragraphs-item--view-mode--preview", and
 *     default: "paragraphs-item--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraphs_item()
 *
 * @ingroup themeable
 */
#}
{%
set classes = [
'paragraphs-item',
'paragraphs-item--type--' ~ paragraphs_item.bundle|clean_class,
view_mode ? 'paragraphs-item--view-mode--' ~ view_mode|clean_class,
]
%}
<div{{ attributes.addClass(classes) }}>
    {{ content }}
</div>